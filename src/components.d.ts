/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LineItem } from "./components/cart-sidebar/cart-sidebar";
export namespace Components {
    interface AvonFooter {
        "content": any;
        "isDark": boolean;
    }
    interface AvonHeader {
        "content": any;
        "data": any;
    }
    interface BottomNavigation {
    }
    interface CartSidebar {
    }
    interface CategoryNav {
        "categories": any[];
    }
    interface DesktopMenu {
        "cartCount": number;
        "data": any;
        "settings": any;
        "wishlistCount": number;
    }
    interface MobileMenu {
        "cartCount": any;
        "categoryList": any[];
        "settings": any;
    }
    interface SearchBar {
    }
    interface TopBar {
        "settings": any;
    }
}
declare global {
    interface HTMLAvonFooterElement extends Components.AvonFooter, HTMLStencilElement {
    }
    var HTMLAvonFooterElement: {
        prototype: HTMLAvonFooterElement;
        new (): HTMLAvonFooterElement;
    };
    interface HTMLAvonHeaderElement extends Components.AvonHeader, HTMLStencilElement {
    }
    var HTMLAvonHeaderElement: {
        prototype: HTMLAvonHeaderElement;
        new (): HTMLAvonHeaderElement;
    };
    interface HTMLBottomNavigationElement extends Components.BottomNavigation, HTMLStencilElement {
    }
    var HTMLBottomNavigationElement: {
        prototype: HTMLBottomNavigationElement;
        new (): HTMLBottomNavigationElement;
    };
    interface HTMLCartSidebarElement extends Components.CartSidebar, HTMLStencilElement {
    }
    var HTMLCartSidebarElement: {
        prototype: HTMLCartSidebarElement;
        new (): HTMLCartSidebarElement;
    };
    interface HTMLCategoryNavElement extends Components.CategoryNav, HTMLStencilElement {
    }
    var HTMLCategoryNavElement: {
        prototype: HTMLCategoryNavElement;
        new (): HTMLCategoryNavElement;
    };
    interface HTMLDesktopMenuElement extends Components.DesktopMenu, HTMLStencilElement {
    }
    var HTMLDesktopMenuElement: {
        prototype: HTMLDesktopMenuElement;
        new (): HTMLDesktopMenuElement;
    };
    interface HTMLMobileMenuElement extends Components.MobileMenu, HTMLStencilElement {
    }
    var HTMLMobileMenuElement: {
        prototype: HTMLMobileMenuElement;
        new (): HTMLMobileMenuElement;
    };
    interface HTMLSearchBarElement extends Components.SearchBar, HTMLStencilElement {
    }
    var HTMLSearchBarElement: {
        prototype: HTMLSearchBarElement;
        new (): HTMLSearchBarElement;
    };
    interface HTMLTopBarElement extends Components.TopBar, HTMLStencilElement {
    }
    var HTMLTopBarElement: {
        prototype: HTMLTopBarElement;
        new (): HTMLTopBarElement;
    };
    interface HTMLElementTagNameMap {
        "avon-footer": HTMLAvonFooterElement;
        "avon-header": HTMLAvonHeaderElement;
        "bottom-navigation": HTMLBottomNavigationElement;
        "cart-sidebar": HTMLCartSidebarElement;
        "category-nav": HTMLCategoryNavElement;
        "desktop-menu": HTMLDesktopMenuElement;
        "mobile-menu": HTMLMobileMenuElement;
        "search-bar": HTMLSearchBarElement;
        "top-bar": HTMLTopBarElement;
    }
}
declare namespace LocalJSX {
    interface AvonFooter {
        "content"?: any;
        "isDark"?: boolean;
    }
    interface AvonHeader {
        "content"?: any;
        "data"?: any;
    }
    interface BottomNavigation {
    }
    interface CartSidebar {
        "onCart:removeItem"?: (event: CustomEvent<LineItem>) => void;
    }
    interface CategoryNav {
        "categories"?: any[];
    }
    interface DesktopMenu {
        "cartCount"?: number;
        "data"?: any;
        "onShowCart"?: (event: CustomEvent<void>) => void;
        "settings"?: any;
        "wishlistCount"?: number;
    }
    interface MobileMenu {
        "cartCount"?: any;
        "categoryList"?: any[];
        "onShowCart"?: (event: CustomEvent<void>) => void;
        "settings"?: any;
    }
    interface SearchBar {
    }
    interface TopBar {
        "settings"?: any;
    }
    interface IntrinsicElements {
        "avon-footer": AvonFooter;
        "avon-header": AvonHeader;
        "bottom-navigation": BottomNavigation;
        "cart-sidebar": CartSidebar;
        "category-nav": CategoryNav;
        "desktop-menu": DesktopMenu;
        "mobile-menu": MobileMenu;
        "search-bar": SearchBar;
        "top-bar": TopBar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "avon-footer": LocalJSX.AvonFooter & JSXBase.HTMLAttributes<HTMLAvonFooterElement>;
            "avon-header": LocalJSX.AvonHeader & JSXBase.HTMLAttributes<HTMLAvonHeaderElement>;
            "bottom-navigation": LocalJSX.BottomNavigation & JSXBase.HTMLAttributes<HTMLBottomNavigationElement>;
            "cart-sidebar": LocalJSX.CartSidebar & JSXBase.HTMLAttributes<HTMLCartSidebarElement>;
            "category-nav": LocalJSX.CategoryNav & JSXBase.HTMLAttributes<HTMLCategoryNavElement>;
            "desktop-menu": LocalJSX.DesktopMenu & JSXBase.HTMLAttributes<HTMLDesktopMenuElement>;
            "mobile-menu": LocalJSX.MobileMenu & JSXBase.HTMLAttributes<HTMLMobileMenuElement>;
            "search-bar": LocalJSX.SearchBar & JSXBase.HTMLAttributes<HTMLSearchBarElement>;
            "top-bar": LocalJSX.TopBar & JSXBase.HTMLAttributes<HTMLTopBarElement>;
        }
    }
}
