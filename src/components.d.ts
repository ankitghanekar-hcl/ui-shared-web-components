/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import { LineItem } from './components/cart-sidebar/cart-sidebar';
import { ModalEvent } from './components/ui-modal/ui-modal';
export namespace Components {
  interface AvonHeader {
    content: any;
    data: any;
  }
  interface BottomNavigation {}
  interface CartSidebar {}
  interface CategoryNav {
    categories: any[];
  }
  interface DesktopMenu {
    cartCount: number;
    data: any;
    settings: any;
    wishlistCount: number;
  }
  interface MobileMenu {
    cartCount: any;
    categoryList: any[];
    settings: any;
  }
  interface SearchBar {}
  interface TopBar {
    settings: any;
  }
  interface UiBox_container {
    /**
     * background-color
     */
    backgroundcolor: string;
    /**
     * background-color
     */
    backgroundimage: string;
    /**
     * display
     */
    display: string;
    /**
     * height
     */
    height: string;
    /**
     * Width
     */
    width: string;
  }
  interface UiButton {
    color?: 'primary' | 'secondary' | 'clear' | 'light';
    disabled?: boolean;
    /**
     * Button Label
     */
    label?: string;
    shape?: 'full' | 'round' | 'smooth' | 'text';
    size?: 'large' | 'medium' | 'small';
    width?: 'fullwidth' | 'mediumwidth' | 'smallwidth';
  }
  interface UiCart_product {
    /**
     * box bgcolor
     */
    boxbgcolor: string;
    /**
     * box height
     */
    boxheight: string;
    /**
     * box width
     */
    boxwidth: string;
    /**
     * Product Heading
     */
    heading: string;
    /**
     * Image src
     */
    image: string;
    /**
     * image alt
     */
    imgalt: string;
    /**
     * image height
     */
    imgheight: string;
    /**
     * image width
     */
    imgwidth: string;
    /**
     * link
     */
    link: string;
    /**
     * price
     */
    price: string;
    /**
     * removeCallback works only in Stencil components
     */
    removeCallback?: Function;
    /**
     * titlecolor
     */
    titlecolor: string;
    /**
     * title fontfamily
     */
    titlefontfamily: string;
    /**
     * title fontsize
     */
    titlefontsize: string;
  }
  interface UiIcon {
    color?: any;
    icon: string;
    size?: any;
  }
  interface UiImg {
    /**
     * alt
     */
    alt: string;
    /**
     * height
     */
    height: string;
    /**
     * src
     */
    src: string;
    /**
     * width
     */
    width: string;
  }
  interface UiLink {
    /**
     * class
     */
    class?: string;
    /**
     * color
     */
    color?: string;
    /**
     * font-family
     */
    fontfamily: string;
    /**
     * font-size
     */
    fontsize?: string;
    /**
     * font-weight
     */
    fontweight?: string;
    /**
     * link
     */
    link: string;
    /**
     * text-decoration
     */
    textdecoration?: string;
  }
  interface UiModal {
    /**
     * Button color
     */
    btncolor?: 'primary' | 'secondary' | 'clear' | 'light';
    /**
     * button-label
     */
    buttonlabel: string;
    /**
     * closeCallback works only in Stencil components
     */
    closeCallback?: Function;
    /**
     * height
     */
    height: string;
    /**
     * Id
     */
    modalId: string;
    /**
     * Heading
     */
    modaltitle?: string;
    /**
     * open
     */
    open: boolean;
    /**
     * Position of modal
     */
    position?: 'center' | 'left' | 'right' | 'top' | 'bottom';
    /**
     * Title color
     */
    titlecolor: string;
    /**
     * Title font-family
     */
    titlefontfamily: string;
    /**
     * Title font-size
     */
    titlefontsize: string;
    /**
     * Title font-weight
     */
    titlefontweight: string;
    /**
     * width
     */
    width?: string;
  }
  interface UiTextbox {
    disabled?: boolean;
    placeholder?: string;
    shape?: 'full' | 'round' | 'smooth';
    usecase?: 'search' | 'loginform';
    width?: 'fullwidth' | 'mediumwidth' | 'smallwidth';
  }
}
declare global {
  interface HTMLAvonHeaderElement extends Components.AvonHeader, HTMLStencilElement {}
  var HTMLAvonHeaderElement: {
    prototype: HTMLAvonHeaderElement;
    new (): HTMLAvonHeaderElement;
  };
  interface HTMLBottomNavigationElement extends Components.BottomNavigation, HTMLStencilElement {}
  var HTMLBottomNavigationElement: {
    prototype: HTMLBottomNavigationElement;
    new (): HTMLBottomNavigationElement;
  };
  interface HTMLCartSidebarElement extends Components.CartSidebar, HTMLStencilElement {}
  var HTMLCartSidebarElement: {
    prototype: HTMLCartSidebarElement;
    new (): HTMLCartSidebarElement;
  };
  interface HTMLCategoryNavElement extends Components.CategoryNav, HTMLStencilElement {}
  var HTMLCategoryNavElement: {
    prototype: HTMLCategoryNavElement;
    new (): HTMLCategoryNavElement;
  };
  interface HTMLDesktopMenuElement extends Components.DesktopMenu, HTMLStencilElement {}
  var HTMLDesktopMenuElement: {
    prototype: HTMLDesktopMenuElement;
    new (): HTMLDesktopMenuElement;
  };
  interface HTMLMobileMenuElement extends Components.MobileMenu, HTMLStencilElement {}
  var HTMLMobileMenuElement: {
    prototype: HTMLMobileMenuElement;
    new (): HTMLMobileMenuElement;
  };
  interface HTMLSearchBarElement extends Components.SearchBar, HTMLStencilElement {}
  var HTMLSearchBarElement: {
    prototype: HTMLSearchBarElement;
    new (): HTMLSearchBarElement;
  };
  interface HTMLTopBarElement extends Components.TopBar, HTMLStencilElement {}
  var HTMLTopBarElement: {
    prototype: HTMLTopBarElement;
    new (): HTMLTopBarElement;
  };
  interface HTMLUiBox_containerElement extends Components.UiBox_container, HTMLStencilElement {}
  var HTMLUiBox_containerElement: {
    prototype: HTMLUiBox_containerElement;
    new (): HTMLUiBox_containerElement;
  };
  interface HTMLUiButtonElement extends Components.UiButton, HTMLStencilElement {}
  var HTMLUiButtonElement: {
    prototype: HTMLUiButtonElement;
    new (): HTMLUiButtonElement;
  };
  interface HTMLUiCart_productElement extends Components.UiCart_product, HTMLStencilElement {}
  var HTMLUiCart_productElement: {
    prototype: HTMLUiCart_productElement;
    new (): HTMLUiCart_productElement;
  };
  interface HTMLUiIconElement extends Components.UiIcon, HTMLStencilElement {}
  var HTMLUiIconElement: {
    prototype: HTMLUiIconElement;
    new (): HTMLUiIconElement;
  };
  interface HTMLUiImgElement extends Components.UiImg, HTMLStencilElement {}
  var HTMLUiImgElement: {
    prototype: HTMLUiImgElement;
    new (): HTMLUiImgElement;
  };
  interface HTMLUiLinkElement extends Components.UiLink, HTMLStencilElement {}
  var HTMLUiLinkElement: {
    prototype: HTMLUiLinkElement;
    new (): HTMLUiLinkElement;
  };
  interface HTMLUiModalElement extends Components.UiModal, HTMLStencilElement {}
  var HTMLUiModalElement: {
    prototype: HTMLUiModalElement;
    new (): HTMLUiModalElement;
  };
  interface HTMLUiTextboxElement extends Components.UiTextbox, HTMLStencilElement {}
  var HTMLUiTextboxElement: {
    prototype: HTMLUiTextboxElement;
    new (): HTMLUiTextboxElement;
  };
  interface HTMLElementTagNameMap {
    'avon-header': HTMLAvonHeaderElement;
    'bottom-navigation': HTMLBottomNavigationElement;
    'cart-sidebar': HTMLCartSidebarElement;
    'category-nav': HTMLCategoryNavElement;
    'desktop-menu': HTMLDesktopMenuElement;
    'mobile-menu': HTMLMobileMenuElement;
    'search-bar': HTMLSearchBarElement;
    'top-bar': HTMLTopBarElement;
    'ui-box_container': HTMLUiBox_containerElement;
    'ui-button': HTMLUiButtonElement;
    'ui-cart_product': HTMLUiCart_productElement;
    'ui-icon': HTMLUiIconElement;
    'ui-img': HTMLUiImgElement;
    'ui-link': HTMLUiLinkElement;
    'ui-modal': HTMLUiModalElement;
    'ui-textbox': HTMLUiTextboxElement;
  }
}
declare namespace LocalJSX {
  interface AvonHeader {
    content?: any;
    data?: any;
  }
  interface BottomNavigation {}
  interface CartSidebar {
    'onCart:removeItem'?: (event: CustomEvent<LineItem>) => void;
  }
  interface CategoryNav {
    categories?: any[];
  }
  interface DesktopMenu {
    cartCount?: number;
    data?: any;
    onShowCart?: (event: CustomEvent<void>) => void;
    settings?: any;
    wishlistCount?: number;
  }
  interface MobileMenu {
    cartCount?: any;
    categoryList?: any[];
    onShowCart?: (event: CustomEvent<void>) => void;
    settings?: any;
  }
  interface SearchBar {}
  interface TopBar {
    settings?: any;
  }
  interface UiBox_container {
    /**
     * background-color
     */
    backgroundcolor?: string;
    /**
     * background-color
     */
    backgroundimage?: string;
    /**
     * display
     */
    display?: string;
    /**
     * height
     */
    height?: string;
    /**
     * Width
     */
    width?: string;
  }
  interface UiButton {
    color?: 'primary' | 'secondary' | 'clear' | 'light';
    disabled?: boolean;
    /**
     * Button Label
     */
    label?: string;
    shape?: 'full' | 'round' | 'smooth' | 'text';
    size?: 'large' | 'medium' | 'small';
    width?: 'fullwidth' | 'mediumwidth' | 'smallwidth';
  }
  interface UiCart_product {
    /**
     * box bgcolor
     */
    boxbgcolor?: string;
    /**
     * box height
     */
    boxheight?: string;
    /**
     * box width
     */
    boxwidth?: string;
    /**
     * Product Heading
     */
    heading?: string;
    /**
     * Image src
     */
    image?: string;
    /**
     * image alt
     */
    imgalt?: string;
    /**
     * image height
     */
    imgheight?: string;
    /**
     * image width
     */
    imgwidth?: string;
    /**
     * link
     */
    link?: string;
    /**
     * price
     */
    price?: string;
    /**
     * removeCallback works only in Stencil components
     */
    removeCallback?: Function;
    /**
     * titlecolor
     */
    titlecolor?: string;
    /**
     * title fontfamily
     */
    titlefontfamily?: string;
    /**
     * title fontsize
     */
    titlefontsize?: string;
  }
  interface UiIcon {
    color?: any;
    icon?: string;
    size?: any;
  }
  interface UiImg {
    /**
     * alt
     */
    alt?: string;
    /**
     * height
     */
    height?: string;
    /**
     * src
     */
    src?: string;
    /**
     * width
     */
    width?: string;
  }
  interface UiLink {
    /**
     * class
     */
    class?: string;
    /**
     * color
     */
    color?: string;
    /**
     * font-family
     */
    fontfamily?: string;
    /**
     * font-size
     */
    fontsize?: string;
    /**
     * font-weight
     */
    fontweight?: string;
    /**
     * link
     */
    link?: string;
    /**
     * text-decoration
     */
    textdecoration?: string;
  }
  interface UiModal {
    /**
     * Button color
     */
    btncolor?: 'primary' | 'secondary' | 'clear' | 'light';
    /**
     * button-label
     */
    buttonlabel?: string;
    /**
     * closeCallback works only in Stencil components
     */
    closeCallback?: Function;
    /**
     * height
     */
    height?: string;
    /**
     * Id
     */
    modalId?: string;
    /**
     * Heading
     */
    modaltitle?: string;
    onModal?: (event: CustomEvent<ModalEvent>) => void;
    /**
     * open
     */
    open?: boolean;
    /**
     * Position of modal
     */
    position?: 'center' | 'left' | 'right' | 'top' | 'bottom';
    /**
     * Title color
     */
    titlecolor?: string;
    /**
     * Title font-family
     */
    titlefontfamily?: string;
    /**
     * Title font-size
     */
    titlefontsize?: string;
    /**
     * Title font-weight
     */
    titlefontweight?: string;
    /**
     * width
     */
    width?: string;
  }
  interface UiTextbox {
    disabled?: boolean;
    placeholder?: string;
    shape?: 'full' | 'round' | 'smooth';
    usecase?: 'search' | 'loginform';
    width?: 'fullwidth' | 'mediumwidth' | 'smallwidth';
  }
  interface IntrinsicElements {
    'avon-header': AvonHeader;
    'bottom-navigation': BottomNavigation;
    'cart-sidebar': CartSidebar;
    'category-nav': CategoryNav;
    'desktop-menu': DesktopMenu;
    'mobile-menu': MobileMenu;
    'search-bar': SearchBar;
    'top-bar': TopBar;
    'ui-box_container': UiBox_container;
    'ui-button': UiButton;
    'ui-cart_product': UiCart_product;
    'ui-icon': UiIcon;
    'ui-img': UiImg;
    'ui-link': UiLink;
    'ui-modal': UiModal;
    'ui-textbox': UiTextbox;
  }
}
export { LocalJSX as JSX };
declare module '@stencil/core' {
  export namespace JSX {
    interface IntrinsicElements {
      'avon-header': LocalJSX.AvonHeader & JSXBase.HTMLAttributes<HTMLAvonHeaderElement>;
      'bottom-navigation': LocalJSX.BottomNavigation & JSXBase.HTMLAttributes<HTMLBottomNavigationElement>;
      'cart-sidebar': LocalJSX.CartSidebar & JSXBase.HTMLAttributes<HTMLCartSidebarElement>;
      'category-nav': LocalJSX.CategoryNav & JSXBase.HTMLAttributes<HTMLCategoryNavElement>;
      'desktop-menu': LocalJSX.DesktopMenu & JSXBase.HTMLAttributes<HTMLDesktopMenuElement>;
      'mobile-menu': LocalJSX.MobileMenu & JSXBase.HTMLAttributes<HTMLMobileMenuElement>;
      'search-bar': LocalJSX.SearchBar & JSXBase.HTMLAttributes<HTMLSearchBarElement>;
      'top-bar': LocalJSX.TopBar & JSXBase.HTMLAttributes<HTMLTopBarElement>;
      'ui-box_container': LocalJSX.UiBox_container & JSXBase.HTMLAttributes<HTMLUiBox_containerElement>;
      'ui-button': LocalJSX.UiButton & JSXBase.HTMLAttributes<HTMLUiButtonElement>;
      'ui-cart_product': LocalJSX.UiCart_product & JSXBase.HTMLAttributes<HTMLUiCart_productElement>;
      'ui-icon': LocalJSX.UiIcon & JSXBase.HTMLAttributes<HTMLUiIconElement>;
      'ui-img': LocalJSX.UiImg & JSXBase.HTMLAttributes<HTMLUiImgElement>;
      'ui-link': LocalJSX.UiLink & JSXBase.HTMLAttributes<HTMLUiLinkElement>;
      'ui-modal': LocalJSX.UiModal & JSXBase.HTMLAttributes<HTMLUiModalElement>;
      'ui-textbox': LocalJSX.UiTextbox & JSXBase.HTMLAttributes<HTMLUiTextboxElement>;
    }
  }
}
